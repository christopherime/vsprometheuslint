{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ScrapeConfig",
  "type": "object",
  "properties": {
    "job_name": {
      "type": "string",
      "description": "The name of the job."
    },
    "honor_labels": {
      "type": "boolean",
      "description": "HonorLabels chooses the metric's labels on collisions with target labels."
    },
    "honor_timestamps": {
      "type": "boolean",
      "description": "HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data."
    },
    "scrape_interval": {
      "type": "string",
      "description": "ScrapeInterval is the interval at which metrics should be scraped."
    },
    "scrape_timeout": {
      "type": "string",
      "description": "ScrapeTimeout is the timeout for scraping metrics."
    },
    "metrics_path": {
      "type": "string",
      "description": "The HTTP path to scrape for metrics."
    },
    "scheme": {
      "type": "string",
      "description": "The HTTP scheme to use for scraping.",
      "enum": ["http", "https"]
    },
    "static_configs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Targets is a list of URLs to scrape."
          },
          "labels": {
            "type": "object",
            "patternProperties": {
              "^[a-zA-Z0-9_]+$": {
                "type": "string"
              }
            },
            "description": "Labels are a set of labels to attach to each target."
          }
        }
      }
    },
    "kubernetes_sd_configs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": ["node", "pod", "service", "endpoints", "endpointslices"],
            "description": "Role is role of entity being discovered."
          },
          "selectors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": ["pod", "service"],
                  "description": "Role of Kubernetes object to discover."
                },
                "label": {
                  "type": "object",
                  "patternProperties": {
                    "^[a-zA-Z0-9_]+$": {
                      "type": "string"
                    }
                  },
                  "description": "Label is a key-value pair used for selecting Kubernetes objects."
                },
                "field": {
                  "type": "object",
                  "patternProperties": {
                    "^[a-zA-Z0-9_]+$": {
                      "type": "string"
                    }
                  },
                  "description": "Field is a key-value pair used for selecting Kubernetes objects."
                },
                "namespaces": {
                  "type": "object",
                  "properties": {
                    "any": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "namespaces": {
            "type": "object",
            "properties": {
              "names": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "file_sd_configs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Files is a list of paths to files that contain target groups."
          },
          "refresh_interval": {
            "type": "string",
            "description": "RefreshInterval is the duration after which the files are read again."
          }
        }
      }
    },
    "relabel_configs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "source_labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Source labels to select from."
          },
          "separator": {
            "type": "string",
            "description": "Separator placed between concatenated source labels."
          },
          "target_label": {
            "type": "string",
            "description": "Target label to set."
          },
          "regex": {
            "type": "string",
            "description": "Regular expression to match against."
          },
          "replacement": {
            "type": "string",
            "description": "Replacement value for the target label."
          },
          "action": {
            "type": "string",
            "enum": ["replace", "keep", "drop", "hashmod", "labelmap", "labeldrop", "labelkeep"],
            "description": "Action to perform."
          }
        }
      }
    },
    "metric_relabel_configs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "source_labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Source labels to select from."
          },
          "separator": {
            "type": "string",
            "description": "Separator placed between concatenated source labels."
          },
          "target_label": {
            "type": "string",
            "description": "Target label to set."
          },
          "regex": {
            "type": "string",
            "description": "Regular expression to match against."
          },
          "replacement": {
            "type": "string",
            "description": "Replacement value for the target label."
          },
          "action": {
            "type": "string",
            "enum": ["replace", "keep", "drop", "hashmod", "labelmap", "labeldrop", "labelkeep"],
            "description": "Action to perform."
          }
        }
      }
    },
    "sample_limit": {
      "type": "integer",
      "description": "SampleLimit is the limit on the number of samples allowed per scrape."
    },
    "target_limit": {
      "type": "integer",
      "description": "TargetLimit is the limit on the number of targets allowed per scrape."
    },
    "label_limit": {
      "type": "integer",
      "description": "LabelLimit is the limit on the number of labels allowed per target."
    },
    "label_name_length_limit": {
      "type": "integer",
      "description": "LabelNameLengthLimit is the limit on label-name length."
    },
    "label_value_length_limit": {
      "type": "integer",
      "description": "LabelValueLengthLimit is the limit on label-value length."
    },
    "proxy_url": {
      "type": "string",
      "description": "ProxyURL is the URL of the proxy to use for scraping."
    },
    "authorization": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Bearer", "Basic"],
          "description": "Type is the type of authorization to use."
        },
        "credentials": {
          "type": "string",
          "description": "Credentials is the authorization credentials."
        }
      }
    }
  },
  "required": ["job_name"]
}
