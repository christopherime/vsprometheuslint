{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ServiceMonitor",
  "type": "object",
  "properties": {
    "metadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the ServiceMonitor"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the ServiceMonitor"
        },
        "labels": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9_]+$": {
              "type": "string"
            }
          },
          "description": "Labels for the ServiceMonitor"
        },
        "annotations": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9_]+$": {
              "type": "string"
            }
          },
          "description": "Annotations for the ServiceMonitor"
        }
      }
    },
    "spec": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "port": {
                "type": "string",
                "description": "Name of the port to scrape metrics from."
              },
              "target_port": {
                "type": "string",
                "description": "The target port to scrape metrics from."
              },
              "path": {
                "type": "string",
                "description": "The HTTP path to scrape for metrics."
              },
              "scheme": {
                "type": "string",
                "description": "The HTTP scheme to use for scraping.",
                "enum": ["http", "https"]
              },
              "interval": {
                "type": "string",
                "description": "The scrape interval."
              },
              "timeout": {
                "type": "string",
                "description": "The scrape timeout."
              },
              "params": {
                "type": "object",
                "patternProperties": {
                  "^[a-zA-Z0-9_]+$": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Optional parameters to append to the scrape URL."
              },
              "honor_labels": {
                "type": "boolean",
                "description": "HonorLabels chooses the metric's labels on collisions with target labels."
              },
              "honor_timestamps": {
                "type": "boolean",
                "description": "HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data."
              },
              "basic_auth": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username for basic auth."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for basic auth."
                  }
                },
                "required": ["username", "password"]
              },
              "tls_config": {
                "type": "object",
                "properties": {
                  "ca_file": {
                    "type": "string",
                    "description": "The CA certificate file."
                  },
                  "cert_file": {
                    "type": "string",
                    "description": "The client certificate file."
                  },
                  "key_file": {
                    "type": "string",
                    "description": "The client key file."
                  },
                  "insecure_skip_verify": {
                    "type": "boolean",
                    "description": "Skip TLS verification."
                  }
                }
              },
              "relabel_configs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "source_labels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Source labels to select from."
                    },
                    "separator": {
                      "type": "string",
                      "description": "Separator placed between concatenated source labels."
                    },
                    "target_label": {
                      "type": "string",
                      "description": "Target label to set."
                    },
                    "regex": {
                      "type": "string",
                      "description": "Regular expression to match against."
                    },
                    "replacement": {
                      "type": "string",
                      "description": "Replacement value for the target label."
                    },
                    "action": {
                      "type": "string",
                      "enum": ["replace", "keep", "drop", "hashmod", "labelmap", "labeldrop", "labelkeep"],
                      "description": "Action to perform."
                    }
                  }
                }
              },
              "metric_relabel_configs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "source_labels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Source labels to select from."
                    },
                    "separator": {
                      "type": "string",
                      "description": "Separator placed between concatenated source labels."
                    },
                    "target_label": {
                      "type": "string",
                      "description": "Target label to set."
                    },
                    "regex": {
                      "type": "string",
                      "description": "Regular expression to match against."
                    },
                    "replacement": {
                      "type": "string",
                      "description": "Replacement value for the target label."
                    },
                    "action": {
                      "type": "string",
                      "enum": ["replace", "keep", "drop", "hashmod", "labelmap", "labeldrop", "labelkeep"],
                      "description": "Action to perform."
                    }
                  }
                }
              }
            }
          }
        },
        "selector": {
          "type": "object",
          "properties": {
            "match_labels": {
              "type": "object",
              "patternProperties": {
                "^[a-zA-Z0-9_]+$": {
                  "type": "string"
                }
              },
              "description": "MatchLabels is a map of {key,value} pairs."
            },
            "match_expressions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "operator": {
                    "type": "string",
                    "enum": ["In", "NotIn", "Exists", "DoesNotExist"]
                  },
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "namespace_selector": {
          "type": "object",
          "properties": {
            "match_names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "MatchNames is a list of namespace names to match."
            },
            "any": {
              "type": "boolean",
              "description": "Any determines if all namespaces are selected."
            }
          }
        },
        "sample_limit": {
          "type": "integer",
          "description": "SampleLimit is the limit on the number of samples allowed per scrape."
        },
        "target_limit": {
          "type": "integer",
          "description": "TargetLimit is the limit on the number of targets allowed per scrape."
        },
        "label_limit": {
          "type": "integer",
          "description": "LabelLimit is the limit on the number of labels allowed per target."
        },
        "label_name_length_limit": {
          "type": "integer",
          "description": "LabelNameLengthLimit is the limit on label-name length."
        },
        "label_value_length_limit": {
          "type": "integer",
          "description": "LabelValueLengthLimit is the limit on label-value length."
        },
        "proxy_url": {
          "type": "string",
          "description": "ProxyURL is the URL of the proxy to use for scraping."
        },
        "authorization": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["Bearer", "Basic"],
              "description": "Type is the type of authorization to use."
            },
            "credentials": {
              "type": "string",
              "description": "Credentials is the authorization credentials."
            }
          }
        }
      }
    }
  },
  "required": ["metadata", "spec"]
}
